<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.backoffice.moffice.items.mapper.ItemMapper">

    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM item i
        LEFT OUTER JOIN
            category c
        ON
            i.category_no = c.index_no
        <where>
            <if test="itemName != null and itemName != ''">
                item_name LIKE CONCAT('%',#{itemName},'%')
            </if>
            <if test="useYn != null and useYn != ''">
                AND i.use_yn LIKE CONCAT('%',#{useYn},'%')
            </if>
            <if test="categoryName != null and categoryName != ''">
                AND c.category_name LIKE CONCAT('%',#{categoryName},'%')
            </if>
        </where>
    </select>

    <select id="selectItemByIndexNo" resultType="com.backoffice.moffice.items.model.Item">
        SELECT i.index_no AS indexNo,
            i.category_no AS categoryNo,
            i.item_name AS itemName,
            i.barcode_no AS barcodeNo,
            i.price AS price,
            i.use_yn AS useYn,
            DATE_FORMAT(i.create_datetime, '%Y-%m-%d %H:%i') AS createDatetime,
            i.create_ip AS createIp,
            DATE_FORMAT(i.update_datetime, '%Y-%m-%d %H:%i:%s') AS updateDatetime,
            i.update_ip AS updateIp,
            c.category_name AS categoryName
        FROM item i
        LEFT OUTER JOIN
            category c
        ON
            i.category_no = c.index_no
        <where>
            i.index_no = #{indexNo}
        </where>
    </select>

    <select id="selectItemByName" resultType="com.backoffice.moffice.items.model.Item">
        SELECT index_no AS indexNo,
            category_no AS categoryNo,
            item_name AS itemName,
            barcode_no AS barcodeNo,
            price AS price,
            use_yn AS useYn,
            DATE_FORMAT(create_datetime, '%Y-%m-%d %H:%i:%s')  AS createDatetime,
            create_ip AS createIp,
            DATE_FORMAT(update_datetime, '%Y-%m-%d %H:%i:%s') AS updateDatetime,
            update_ip AS updateIp
        FROM item
        <where>
            item_name = #{itemName}
        </where>
    </select>

    <select id="selectItemByBarcodeNo" resultType="com.backoffice.moffice.items.model.Item">
        SELECT index_no AS indexNo,
        category_no AS categoryNo,
        item_name AS itemName,
        barcode_no AS barcodeNo,
        price AS price,
        use_yn AS useYn,
        DATE_FORMAT(create_datetime, '%Y-%m-%d %H:%i:%s')  AS createDatetime,
        create_ip AS createIp,
        DATE_FORMAT(update_datetime, '%Y-%m-%d %H:%i:%s') AS updateDatetime,
        update_ip AS updateIp
        FROM item
        <where>
            barcode_no = #{barcodeNo}
        </where>
    </select>


    <select id="selectItemList" resultType="com.backoffice.moffice.items.model.Item">
        SELECT index_no AS indexNo,
            category_no AS categoryNo,
            item_name AS itemName,
            barcode_no AS barcodeNo,
            price AS price,
            use_yn AS useYn,
            DATE_FORMAT(i.create_datetime, '%Y-%m-%d %H:%i:%s')  AS createDatetime,
            i.create_ip AS createIp,
            DATE_FORMAT(i.update_datetime, '%Y-%m-%d %H:%i:%s') AS updateDatetime,
            update_ip AS updateIp
        FROM item
    </select>

    <select id="selectItemListWithPaging" resultType="com.backoffice.moffice.items.model.Item">
        SELECT i.index_no AS indexNo,
            i.category_no AS categoryNo,
            i.item_name AS itemName,
            i.barcode_no AS barcodeNo,
            i.price AS price,
            i.use_yn AS useYn,
            DATE_FORMAT(i.create_datetime, '%Y-%m-%d %H:%i:%s')  AS createDatetime,
            i.create_ip AS createIp,
            DATE_FORMAT(i.update_datetime, '%Y-%m-%d %H:%i:%s') AS updateDatetime,
            i.update_ip AS updateIp,
            c.category_name AS categoryName
            FROM item i
        LEFT OUTER JOIN
            category c
        ON
            i.category_no = c.index_no
        <where>
            <if test="itemName != null and itemName != ''">
                item_name LIKE CONCAT('%',#{itemName},'%')
            </if>
            <if test="useYn != null and useYn != ''">
                AND i.use_yn LIKE CONCAT('%',#{useYn},'%')
            </if>
            <if test="categoryName != null and categoryName != ''">
                AND c.category_name LIKE CONCAT('%',#{categoryName},'%')
            </if>
        </where>
        ORDER BY i.index_no DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="selectItemListForExcel" resultType="com.backoffice.moffice.items.model.ItemForExcel">
        SELECT i.index_no AS indexNo,
            i.category_no AS categoryNo,
            i.item_name AS itemName,
            i.barcode_no AS barcodeNo,
            i.price AS price,
            i.use_yn AS useYn,
            DATE_FORMAT(i.create_datetime, '%Y-%m-%d %H:%i:%s')  AS createDatetime,
            i.create_ip AS createIp,
            DATE_FORMAT(i.update_datetime, '%Y-%m-%d %H:%i:%s') AS updateDatetime,
            i.update_ip AS updateIp,
            c.category_name AS categoryName
        FROM item i
        LEFT OUTER JOIN
            category c
        ON
            i.category_no = c.index_no
        <where>
            <if test="itemName != null and itemName != ''">
                item_name LIKE CONCAT('%',#{itemName},'%')
            </if>
            <if test="useYn != null and useYn != ''">
                AND i.use_yn LIKE CONCAT('%',#{useYn},'%')
            </if>
            <if test="categoryName != null and categoryName != ''">
                AND c.category_name LIKE CONCAT('%',#{categoryName},'%')
            </if>
        </where>
        ORDER BY i.index_no DESC
    </select>
    <select id="getAllItems" resultType="com.backoffice.moffice.items.model.Item">
        SELECT *
        FROM item
        WHERE use_yn = "Y"
    </select>
    <insert id="insertItem" useGeneratedKeys="true" keyProperty="indexNo">
        INSERT INTO item(
            category_no,
            item_name,
            barcode_no,
            price,
            use_yn,
            create_datetime,
            create_ip)
        VALUES (
            #{categoryNo},
            #{itemName},
            #{barcodeNo},
            #{price},
            #{useYn},
            #{createDatetime},
            #{createIp}
        )
    </insert>

    <update id="updateItem">
        UPDATE
            item
        SET
            item_name = #{itemName},
            category_no = #{categoryNo},
            barcode_no = #{barcodeNo},
            price = #{price},
            use_yn = #{useYn},
            update_datetime = #{updateDatetime},
            update_ip = #{updateIp}
        <where>
            index_no = #{indexNo}
        </where>
    </update>

    <delete id="deleteItem">
        DELETE FROM item
        <where>
            index_no = #{indexNo}
        </where>
    </delete>

</mapper>